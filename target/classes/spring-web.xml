<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 1：开启springMVC注解模式 -->
	<!-- 1>自动注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter
	HandlerMapping的实现类会处理@RequestMapping 注解，并将其注册到请求映射表中。
	HandlerAdapter的实现类，它是处理请求的适配器，就是确定调用哪个类的哪个方法，并且构造方法参数，返回值。
	参考：http://my.oschina.net/HeliosFly/blog/205343
		2>数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）
	参考：http://blog.csdn.net/superdog007/article/details/42558195
	-->
	<mvc:annotation-driven />

	<!-- 2：静态资源默认的servlet配置 -->
	<!-- 如果将DispatcherServlet请求映射配置为"/"，则Spring MVC将捕获Web容器所有的请求，包括静态资源的请求，
	Spring MVC会将它们当成一个普通请求处理，因此找不到对应处理器将导致错误。
	如何让Spring框架能够捕获所有URL的请求，同时又将静态资源的请求转由Web容器处理
	使用<mvc:default-servlet-handler />或者<mvc:resources />
	其中<mvc:default-servlet-handler />将静态资源的处理经由Spring MVC框架交回Web应用服务器处理。
	而<mvc:resources />更进一步，由Spring MVC框架自己处理静态资源，并添加一些有用的附加值功能。
	参考：http://www.cnblogs.com/fangqi/archive/2012/10/28/2743108.html
	 -->
	 <!-- 
	 springMVC对静态资源访问的处理
	 参考：http://my.oschina.net/hnqingping1255/blog/415575
	  -->
	<mvc:default-servlet-handler />
	
	<!-- 3：配置视图映射路径-->
	<!-- 配置逻辑试图名称映射到真实的视图文件，方式是通过配置的前缀后后缀进行拼接 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 4:spring组件扫描注解 -->
	<!-- Spring 2.5引入了更多典型化注解(stereotype annotations)： @Component、@Service和 @Controller。
	@Component是所有受Spring管理组件的通用形式；而@Repository、@Service和 @Controller则是@Component的细化，
	用来表示更具体的用例(例如，分别对应了持久化层、服务层和表现层)。也就是说，你能用@Component来注解你的组件类，
	但如果用@Repository、@Service 或@Controller来注解它们，你的类也许能更好地被工具处理，或与切面进行关联
	参考：http://blog.csdn.net/yechaodechuntian/article/details/50585368
	 -->
	<context:component-scan base-package="org.codethink.wechat.controller"/>
	
	

</beans>